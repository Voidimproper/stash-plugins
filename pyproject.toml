[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stash-plugins"
version = "1.0.0"
description = "Collection of plugins for Stash media management system"
readme = "README.md"
license = {file = "LICENCE"}
authors = [
    {name = "VoidImproper", email = "void.improper+gh@gmail.com"},
]
maintainers = [
    {name = "VoidImproper", email = "void.improper+gh@gmail.com"},
]
keywords = ["stash", "media", "management", "plugins"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Video",
]
requires-python = ">=3.12"
dependencies = [
    "stashapp-tools>=0.2.0",
    "requests>=2.28.0",
    "thefuzz>=0.22.0",
]

[project.optional-dependencies]
dev = [
    # Code quality
    "black>=24.0.0",
    "ruff>=0.14.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "flake8>=6.0.0",

    # Development tools
    "jupyterlab>=4.0.0",

    # Code generation
    "datamodel-code-generator[http,graphql]>=0.25.0",
    "gql[all]>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/Voidimproper/stash-plugins"
Repository = "https://github.com/Voidimproper/stash-plugins"
Documentation = "https://docs.stashapp.cc"
"Bug Tracker" = "https://github.com/Voidimproper/stash-plugins/issues"
"Community" = "https://discord.gg/2TsNFKt"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["plugins"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.md", "*.txt"]

# Tool configurations
[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["plugins"]
known-third-party = ["stashapi", "requests", "stashapp-tools"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
exclude = [
    "^tests/",
    "^venv/",
    "^\\.venv/"
]

[[tool.mypy.overrides]]
module = ["plugins.*"]
disallow_untyped_defs = false

[tool.pyright]
include = ["plugins"]
exclude = ["**/__pycache__"]
pythonVersion = "3.10"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.ariadne-codegen]
remote_schema_url = "http://localhost:9999/graphql"
queries_path = "graphql"
target_package_name = "stash_gql"
target_package_path = "plugins/void_common"
